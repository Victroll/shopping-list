{"version":3,"sources":["components/home-card/index.js","utils/literals.js","utils/paths.js","components/home/index.js","utils/models.js","components/GitHub-corner/index.js","components/app-layout/index.js","utils/flowStateMachine.js","components/button-wrapper/index.js","store/new-list/actions.js","store/new-list/actionTypes.js","components/new-title/index.js","components/product-info-wrapper/index.js","components/product-panel/index.js","components/modal/index.js","utils/localStorage.js","components/new-list/index.js","components/lists-table-item/index.js","components/lists-table-wrapper/index.js","components/lists-table/index.js","store/show-list/actions.js","store/show-list/actionTypes.js","components/list/index.js","utils/flowStates.js","store/new-list/index.js","store/show-list/index.js","store/config.js","store/index.js","App.js","index.js"],"names":["HomeCard","_ref","icon","title","buttonTxt","onClick","react_default","a","createElement","className","es_icon","type","theme","es_button","homeTxt","showListsTable","desc","list","concat","createNewListTxt","newTitle","placeholder","newProduct","name","namePlaceholder","Faker","random","array_element","amount","kg","uds","cancelModalTitle","cancelList","finishModalTitle","finishList","success","commons","paths","home","newList","showLists","Home","PropTypes","shape","action","string","block","func","createHref","go","goBack","goForward","length","number","listen","location","hash","key","pathname","search","state","page","push","replace","component","Component","inputs","next","oneOfType","arrayOf","node","history","components_home_card","goToShowLists","goToCreateNewList","GitHubCorner","react","href","aria-label","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","AppLayout","children","FlowStateMachine","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentState","initialState","nextProps","nextState","allowRecursivity","to","_this$props","stateList","negativeRedirect","goTo","setState","_this2","createFactory","factory","objectSpread","keys","reduce","last","current","defineProperty","transition","defaultProps","ButtonWrapper","addProduct","dispatch","saveTitle","NewTitle","onInputChange","newValue","onNextHandler","saveTitleHandler","cancel","input","value","onChange","e","target","button_wrapper","disabled","connect","newListReducer","ProductInfoWrapper","RadioGroup","es_radio","Group","ProductPanel","updateField","field","updateProductHandler","id","product","undefined","prevProps","prevProduct","_this$props2","onAdd","onRemove","_this$state","product_info_wrapper","input_number","min","addProductHandler","updateProduct","SLModal","onCancel","onContinue","modal","visible","mask","closable","centered","footer","PRE","saveNewList","currentLists","JSON","parse","window","localStorage","getItem","setItem","stringify","getLists","lists","removeList","newLists","Panel","NewList","onAddHandler","products","activeKey","onCollapseHandler","onRemoveHandler","removeProductHandler","onCancelHandler","resetListHandler","onFinishHandler","_this$props3","finish","message","onShowCancelModalHandler","showCancelModal","onShowFinishModalHandler","showFinishModal","_this$props4","prev","collapse","accordion","map","prod","i","header","components_product_panel","components_modal","_ref$newListReducer","removeProduct","resetList","Item","Meta","ListsTableItem","count","onDelete","onShow","onEdit","description","ListsTableWrapper","ListsTable","onCreateHandle","onDeleteHandler","onShowListHandler","currentList","onToggleModal","onStoreAndShowListHandler","setListHandler","caught","nextId","showModal","onEditListHandler","setEditListHandler","edit","components_lists_table_wrapper","es_list","bordered","dataSource","renderItem","item","components_lists_table_item","showListReducer","setList","setEditList","columns","dataIndex","render","text","checked","checkHandler","es_checkbox","defaultChecked","_ref3","_ref3$showListReducer","checkProductHandler","checkProduct","propsFromState","propsFromDispatch","ownProps","data","_ref2","table","pagination","createNewListStates","showListStates","List","reducer","newProducts","arguments","toConsumableArray","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","routerMiddleware","createHistory","enhancer","applyMiddleware","apply","config","globalReducer","createStore","combineReducers","router","Content","App","es","store","layout","GitHub_corner","BrowserRouter","basename","process","Switch","Route","exact","path","components_home","components_app_layout","flowStateMachine","assign","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4b04532e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/** antd */\r\nimport { Button, Icon } from 'antd';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nconst HomeCard = ({ icon, title, buttonTxt, onClick }) => (\r\n  <div className='home-card'>\r\n    <Icon type={icon} theme=\"twoTone\" className='icon' />\r\n    <h1>{title}</h1>\r\n    <Button onClick={onClick}>{buttonTxt}</Button>\r\n  </div>\r\n);\r\n\r\nHomeCard.propTypes = {\r\n  icon: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  buttonTxt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default HomeCard;\r\n","import Faker from 'Faker';\r\n\r\nexport const homeTxt = {\r\n  showLists: 'Ver listas',\r\n  showListsButton: 'Ver',\r\n  newList: 'Crear nueva lista',\r\n  newListButton: 'Crear',\r\n  settings: 'Ajustes de usuario',\r\n  settingsButton: 'Ajustes'\r\n};\r\n\r\nexport const showListsTable = {\r\n  title: 'Listas guardadas',\r\n  products: 'Productos: ',\r\n  reset: 'Reiniciar',\r\n  modal: {\r\n    title: '¿Sustituir lista?',\r\n    desc: list =>\r\n      `Ya tienes una lista abierta. ¿Quieres abrir la lista ${list} y perder la anterior?` // eslint-disable-line\r\n  }\r\n};\r\n\r\nexport const createNewListTxt = {\r\n  newTitle: {\r\n    title: 'Introduce el nombre de la lista',\r\n    placeholder: '\"Fiesta de Francisco Castillo\"'\r\n  },\r\n  newProduct: {\r\n    title: 'Nuevo producto',\r\n    name: 'Nombre del producto',\r\n    namePlaceholder: () => Faker.random.array_element([\r\n      'Berenjenas',\r\n      'Champú',\r\n      'Fregona',\r\n      'Comida del perro',\r\n      'Cebollas',\r\n      'Latas de tomate',\r\n      'Arroz',\r\n      'Friegaplatos',\r\n      'Pilas'\r\n    ]),\r\n    amount: 'Cantidad',\r\n    kg: '.kgs',\r\n    uds: '.uds'\r\n  },\r\n  cancelModalTitle: title => `Cancelar lista ${title}`,\r\n  cancelList: '¿Seguro que quieres cancelar la creación de esta lsita?',\r\n  finishModalTitle: 'Finalizar lista',\r\n  finishList: '¿Deseas finalizar y guardar la lista?',\r\n  success: title => `¡Lista ${title} guardada!`\r\n};\r\n\r\nexport const commons = {\r\n  cancel: 'Cancelar',\r\n  next: 'Siguiente',\r\n  finish: 'Terminar',\r\n  back: 'Volver',\r\n  continue: 'Continuar'\r\n};\r\n","const paths = {\r\n  home: '/',\r\n  newList: '/create-new-list',\r\n  showLists: '/show-lists'\r\n};\r\n\r\nexport default paths;\r\n","import React from 'react';\r\n\r\n/** Components */\r\nimport HomeCard from '../home-card';\r\n\r\n/** Literals */\r\nimport { homeTxt } from '../../utils/literals';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\n/** Paths */\r\nimport paths from '../../utils/paths';\r\n\r\n/** Models */\r\nimport { historyModel } from '../../utils/models';\r\n\r\n/**\r\n * Navigate to Create New List section.\r\n * The url by default is: /create-new-list\r\n * @param {object} history \r\n */\r\nconst goToCreateNewList = history => {\r\n  history.push(paths.newList);\r\n};\r\n\r\n/**\r\n * Navigate to Show Lists section.\r\n * The url by default is: /show-lists\r\n * @param {object} history \r\n */\r\nconst goToShowLists = history => {\r\n  history.push(paths.showLists);\r\n};\r\n\r\nconst Home = ({ history }) => (\r\n  <div className='home'>\r\n    <HomeCard\r\n      icon=\"profile\"\r\n      title={homeTxt.showLists}\r\n      buttonTxt={homeTxt.showListsButton}\r\n      onClick={() => goToShowLists(history)}\r\n    />\r\n    <HomeCard\r\n      icon=\"edit\"\r\n      title={homeTxt.newList}\r\n      buttonTxt={homeTxt.newListButton}\r\n      onClick={() => goToCreateNewList(history)}\r\n    />\r\n    <HomeCard\r\n      icon=\"setting\"\r\n      title={homeTxt.settings}\r\n      buttonTxt={homeTxt.settingsButton}\r\n    />\r\n  </div>\r\n);\r\n\r\nHome.propTypes = {\r\n  history: historyModel\r\n};\r\n\r\nexport default Home;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const historyModel = PropTypes.shape({\r\n  action: PropTypes.string,\r\n  block: PropTypes.func,\r\n  createHref: PropTypes.func,\r\n  go: PropTypes.func,\r\n  goBack: PropTypes.func,\r\n  goForward: PropTypes.func,\r\n  length: PropTypes.number,\r\n  listen: PropTypes.func,\r\n  location: PropTypes.shape({\r\n    hash: PropTypes.string,\r\n    key: PropTypes.string,\r\n    pathname: PropTypes.string,\r\n    search: PropTypes.string,\r\n    state: PropTypes.shape({\r\n      page: PropTypes.number\r\n    })\r\n  }),\r\n  push: PropTypes.func,\r\n  replace: PropTypes.func\r\n});\r\n\r\n/**\r\n * {\r\n *  component: ChooseTransmitter,\r\n *  inputs: {\r\n *    next: 1,\r\n *    prev: -1,\r\n *    cancel: -1\r\n *  }\r\n * }\r\n */\r\nexport const componentState = PropTypes.shape({\r\n  component: Component,\r\n  inputs: PropTypes.shape({\r\n    next: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n  })\r\n});\r\n\r\nexport const childrenModel = PropTypes.oneOfType([\r\n  PropTypes.arrayOf(PropTypes.node),\r\n  PropTypes.node\r\n]);\r\n\r\nexport const productModel = PropTypes.shape({\r\n  name: PropTypes.string,\r\n  amount: PropTypes.number,\r\n  uds: PropTypes.number\r\n});\r\n","/* eslint max-len: 0 */\r\nimport React, { Fragment } from 'react';\r\n\r\nconst GitHubCorner = () => (\r\n  <Fragment>\r\n    <a\r\n      href=\"https://github.com/Victroll\"\r\n      className=\"github-corner\"\r\n      aria-label=\"View source on GitHub\"\r\n    >\r\n      <svg\r\n        width=\"80\"\r\n        height=\"80\"\r\n        viewBox=\"0 0 250 250\"\r\n        style={{fill: \"#151513\", color: \"#fff\", position: \"absolute\", top: 0, border: 0, right: 0}}\r\n        aria-hidden=\"true\"\r\n      >\r\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\r\n        <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{transformOrigin: \"130px 106px\"}} className=\"octo-arm\" />\r\n        <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\" />\r\n      </svg>\r\n    </a>\r\n    <style>{\".github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\"}</style>\r\n  </Fragment>\r\n);\r\n\r\nexport default GitHubCorner;\r\n","import React from 'react';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\n/** Models */\r\nimport { childrenModel } from '../../utils/models';\r\n\r\nconst AppLayout = ({ children }) => (\r\n  <div className='app-layout'>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nAppLayout.propTypes = {\r\n  children: childrenModel.isRequired\r\n};\r\n\r\nexport default AppLayout;\r\n","import { Component, createFactory } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { componentState, historyModel } from './models';\r\n\r\n/**\r\n * @param {Array} stateList @see componentState List of states for the flow\r\n * @param {string} negativeRedirect URL to redirect when an input of any state\r\n * is -1.\r\n *\r\n * The prop stateList should be used like this:\r\n *\r\n * [\r\n *  {\r\n *    component: ChooseTransmitter,\r\n *    inputs: {\r\n *      next: 1,\r\n *      prev: -1,\r\n *      cancel: -1,\r\n *      save: 7\r\n *    }\r\n *  },\r\n * {\r\n *    component: ChooseDestiny,\r\n *    inputs: {\r\n *      nextSimple: 3,\r\n *      nextComplex: 2,\r\n *      prev: 0,\r\n *      cancel: -1\r\n *    }\r\n *  },\r\n * {\r\n *    component: ChooseComplexShipping,\r\n *    inputs: {\r\n *      next: ??,\r\n *      prev: 1,\r\n *      cancel: -1\r\n *    }\r\n *  },\r\n *  {\r\n *    component: DestinyDataSimpleShipping,\r\n *    inputs: {\r\n *      next: ??,\r\n *      prev: 1,\r\n *      cancel: -1\r\n *    }\r\n *  }\r\n * ]\r\n */\r\nclass FlowStateMachine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentState: props.initialState\r\n    };\r\n  }\r\n\r\n  // Update only when a tranistion happens\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { currentState } = this.state;\r\n    const { allowRecursivity } = this.props;\r\n    if (nextState.currentState !== currentState || allowRecursivity) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  transition(to) {\r\n    const { currentState } = this.state;\r\n    const { stateList, history, negativeRedirect } = this.props;\r\n    const goTo = stateList[currentState].inputs[to];\r\n    if (typeof goTo === 'string') {\r\n      history.push(`/${goTo}`);\r\n    } else if (goTo === -1) {\r\n      history.push(negativeRedirect);\r\n    } else {\r\n      this.setState({\r\n        currentState: goTo\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currentState } = this.state;\r\n    const { stateList } = this.props;\r\n    const state = stateList[currentState];\r\n    const factory = createFactory(state.component);\r\n\r\n    return factory({\r\n      ...this.props,\r\n      ...Object.keys(state.inputs).reduce(\r\n        (last, current) => ({\r\n          ...last,\r\n          [current]: () => this.transition(current)\r\n        }),\r\n        {}\r\n      )\r\n    });\r\n  }\r\n}\r\n\r\nFlowStateMachine.propTypes = {\r\n  // List of states\r\n  stateList: PropTypes.arrayOf(componentState),\r\n  // Page to go with the value -1\r\n  negativeRedirect: PropTypes.string,\r\n  // Initial state\r\n  initialState: PropTypes.number,\r\n  // Browser history\r\n  history: historyModel,\r\n  // Allow recursivity\r\n  allowRecursivity: PropTypes.bool\r\n};\r\n\r\nFlowStateMachine.defaultProps = {\r\n  negativeRedirect: '/',\r\n  initialState: 0,\r\n  allowRecursivity: false\r\n};\r\n\r\nexport default FlowStateMachine;\r\n","import React from 'react';\r\n\r\n/** Models */\r\nimport { childrenModel } from '../../utils/models';\r\n\r\nconst ButtonWrapper = ({ children }) => (\r\n  <div className='button-wrapper'>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nButtonWrapper.propTypes = {\r\n  children: childrenModel.isRequired\r\n};\r\n\r\nexport default ButtonWrapper;\r\n","import * as TYPES from './actionTypes';\r\n\r\nexport const addProduct = dispatch => {\r\n  dispatch({\r\n    type: TYPES.ADD_PRODUCT\r\n  });\r\n};\r\n\r\nexport const saveTitle = (title, dispatch) => {\r\n  dispatch({\r\n    type: TYPES.SAVE_TITLE,\r\n    title\r\n  });\r\n};\r\n\r\nexport const removeProduct = (id, dispatch) => {\r\n  dispatch({\r\n    type: TYPES.REMOVE_PRODUCT,\r\n    id\r\n  });\r\n};\r\n\r\nexport const updateProduct = (id, field, value, dispatch) => {\r\n  dispatch({\r\n    type: TYPES.UPDATE_FIELD,\r\n    id,\r\n    field,\r\n    value\r\n  });\r\n};\r\n\r\nexport const resetList = dispatch => {\r\n  dispatch({\r\n    type: TYPES.RESET\r\n  });\r\n};\r\n\r\nexport const saveList = dispatch => {\r\n  dispatch({\r\n    type: TYPES.SAVE_LIST\r\n  });\r\n};\r\n\r\nexport const setList = (dispatch, products) => {\r\n  dispatch({\r\n    type: TYPES.SET_LIST,\r\n    products\r\n  });\r\n};\r\n","export const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const SAVE_TITLE = 'SAVE_TITLE';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const UPDATE_FIELD = 'UPDATE_FIELD';\r\nexport const RESET = 'RESET';\r\nexport const SAVE_LIST = 'SAVE_LIST';\r\nexport const SET_LIST = 'SET_LIST';\r\n","import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/** antd  */\r\nimport { Input, Button } from 'antd';\r\n\r\n/** Components */\r\nimport ButtonWrapper from '../button-wrapper';\r\n\r\n/** Literals */\r\nimport { createNewListTxt, commons } from '../../utils/literals';\r\n\r\n/** Actions */\r\nimport { saveTitle } from '../../store/new-list/actions';\r\n\r\nclass NewTitle extends Component { \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { title } = props;\r\n\r\n    this.state = {\r\n      title\r\n    };\r\n  }\r\n\r\n  onInputChange = newValue => {\r\n    this.setState({ title: newValue });\r\n  };\r\n\r\n  onNextHandler = () => {\r\n    const { saveTitleHandler, next } = this.props;\r\n    const { title } = this.state;\r\n    saveTitleHandler(title);\r\n    next();\r\n  };\r\n\r\n  render () {\r\n    const { title } = this.state;\r\n    const { cancel } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <h1>{createNewListTxt.newTitle.title}</h1>\r\n        <Input\r\n          placeholder={createNewListTxt.newTitle.placeholder}\r\n          value={title}\r\n          onChange={e => this.onInputChange(e.target.value)}\r\n        />\r\n        <ButtonWrapper>\r\n          <Button onClick={cancel}>\r\n            {commons.cancel}\r\n          </Button>\r\n          <Button\r\n            disabled={title === ''}\r\n            onClick={this.onNextHandler}\r\n            type='primary'\r\n          >\r\n            {commons.next}\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNewTitle.propTypes = {\r\n  next: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  saveTitleHandler: PropTypes.func,\r\n  title: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ newListReducer: { title } }) => ({\r\n  title\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveTitleHandler: title => saveTitle(title, dispatch)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewTitle);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/** Models */\r\nimport { childrenModel } from '../../utils/models';\r\n\r\nconst ProductInfoWrapper = ({ children, title }) => (\r\n  <div className='product-info-wrapper'>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nProductInfoWrapper.propTypes = {\r\n  children: childrenModel.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default ProductInfoWrapper;\r\n","import React, { Fragment, Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/** antd  */\r\nimport { Input, InputNumber, Radio, Button } from 'antd';\r\n\r\n/** Components */\r\nimport ProductInfoWrapper from '../product-info-wrapper';\r\n\r\n/** Literals */\r\nimport { createNewListTxt } from '../../utils/literals';\r\n\r\n/** Models */\r\nimport { productModel } from '../../utils/models';\r\n\r\n/** Actions */\r\nimport { addProduct, updateProduct } from '../../store/new-list/actions';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass ProductPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { product } = props;\r\n\r\n    this.state = {\r\n      name: product === undefined\r\n        ? ''\r\n        : product.name,\r\n      amount: product === undefined\r\n        ? 1\r\n        : product.amount,\r\n      uds: product === undefined\r\n        ? 0\r\n        : product.uds\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { product: prevProduct } = prevProps;\r\n    const { product: newProduct } = this.props;\r\n    if (prevProduct.name !== newProduct.name) {\r\n      this.setState({ // eslint-disable-line\r\n        name: newProduct.name,\r\n        amount: newProduct.amount,\r\n        uds: newProduct.uds,\r\n      });\r\n    }\r\n  }\r\n\r\n  updateField = (field, newValue) => {\r\n    const { updateProductHandler, id } = this.props;\r\n    updateProductHandler(id, field, newValue);\r\n    this.setState({ [field]: newValue });\r\n  };\r\n\r\n  render() {\r\n    const { onAdd, onRemove, id } = this.props;\r\n    const { name, amount, uds } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <ProductInfoWrapper title={createNewListTxt.newProduct.name}>\r\n          <Input\r\n            placeholder={createNewListTxt.newProduct.namePlaceholder()}\r\n            value={name}\r\n            onChange={e => this.updateField('name', e.target.value)}\r\n          />\r\n        </ProductInfoWrapper>\r\n        <ProductInfoWrapper title={createNewListTxt.newProduct.amount}>\r\n          <InputNumber\r\n            value={amount}\r\n            min={1}\r\n            onChange={e => this.updateField('amount', e)}\r\n          />\r\n          <RadioGroup\r\n            onChange={\r\n              e => this.updateField('uds', e.target.value)\r\n            }\r\n            value={uds}\r\n            className='radio-group'\r\n          >\r\n            <Radio value={0}>{createNewListTxt.newProduct.kg}</Radio>\r\n            <Radio value={1}>{createNewListTxt.newProduct.uds}</Radio>\r\n          </RadioGroup>\r\n        </ProductInfoWrapper>\r\n        <ProductInfoWrapper>\r\n          <div className='product-info-button-wrapper'>\r\n            <Button\r\n              type='primary'\r\n              icon='plus-circle'\r\n              shape='circle-outline'\r\n              onClick={onAdd}\r\n            />\r\n            <Button\r\n              type='primary'\r\n              icon='delete'\r\n              shape='circle-outline'\r\n              onClick={onRemove}\r\n              disabled={id === 0}\r\n            />\r\n          </div>\r\n        </ProductInfoWrapper>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nProductPanel.propTypes = {\r\n  product: productModel,\r\n  onAdd: PropTypes.func,\r\n  onRemove: PropTypes.func,\r\n  updateProductHandler: PropTypes.func,\r\n  id: PropTypes.number\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addProductHandler:\r\n    ({ name, amount, uds }) => addProduct(name, amount, uds, dispatch),\r\n  updateProductHandler:\r\n    (id, field, value) => updateProduct(id, field, value, dispatch)\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductPanel);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/** antd  */\r\nimport { Button, Modal } from 'antd';\r\n\r\n/** Models */\r\nimport { childrenModel } from '../../utils/models';\r\n\r\n/** Literals */\r\nimport { commons } from '../../utils/literals';\r\n\r\nconst SLModal = ({\r\n  onCancel,\r\n  onContinue,\r\n  children,\r\n  title\r\n}) => (\r\n  <Modal\r\n    visible\r\n    title={title}\r\n    mask\r\n    closable={false}\r\n    centered\r\n    footer={[\r\n      <Button key='cancel' onClick={onCancel}>\r\n        {commons.cancel}\r\n      </Button>,\r\n      <Button key='continue' type='primary' onClick={onContinue}>\r\n        {commons.continue}\r\n      </Button>\r\n    ]}\r\n  >\r\n    {children}\r\n  </Modal>\r\n);\r\n\r\nSLModal.propTypes = {\r\n  onCancel: PropTypes.func,\r\n  onContinue: PropTypes.func,\r\n  children: childrenModel,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default SLModal;\r\n","/**\r\n * This file should be removed and each function in the project, replaced\r\n * for API services\r\n */\r\n\r\nconst PRE = 'ShoppingList';\r\nconst LISTS = 'Lists';\r\n\r\nexport const saveNewList = (title, list) => {\r\n  // Get current lists and push the new one\r\n  let currentLists = JSON.parse(window.localStorage.getItem(`${PRE}-${LISTS}`));\r\n  if (currentLists === null) {\r\n    window.localStorage.setItem(\r\n      `${PRE}-${LISTS}`,\r\n      JSON.stringify({\r\n        [title]: list\r\n      })\r\n    );\r\n  } else {\r\n    currentLists[title] = list;\r\n    window.localStorage.setItem(\r\n      `${PRE}-${LISTS}`,\r\n      JSON.stringify(currentLists)\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Return a list of lists. Each lists will be a shopping list\r\n */\r\nexport const getLists = () => {\r\n  const lists = JSON.parse(window.localStorage.getItem(`${PRE}-${LISTS}`));\r\n  if (lists === null) {\r\n    return {};\r\n  }\r\n  return lists;\r\n};\r\n\r\nexport const removeList = id => {\r\n  const lists = JSON.parse(window.localStorage.getItem(`${PRE}-${LISTS}`));\r\n  const newLists = {...lists};\r\n  delete newLists[id];\r\n  window.localStorage.setItem(\r\n    `${PRE}-${LISTS}`,\r\n    JSON.stringify(newLists)\r\n  );\r\n\r\n  return newLists;\r\n};\r\n","import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/** antd  */\r\nimport { Collapse, Button, message } from 'antd';\r\n\r\n/** Components */\r\nimport ProductPanel from '../product-panel';\r\nimport ButtonWrapper from '../button-wrapper';\r\nimport SLModal from '../modal';\r\n\r\n/** Models */\r\nimport { productModel } from '../../utils/models';\r\n\r\n/** Actions */\r\nimport {\r\n  addProduct,\r\n  removeProduct,\r\n  resetList\r\n} from '../../store/new-list/actions';\r\nimport { saveNewList } from '../../utils/localStorage';\r\n\r\n/** Literals */\r\nimport { createNewListTxt, commons } from '../../utils/literals';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass NewList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { addProductHandler, products } = props;\r\n\r\n    this.state = {\r\n      activeKey: '0',\r\n      showCancelModal: false,\r\n      showFinishModal: false\r\n    };\r\n\r\n    if (products.length === 0) {\r\n      addProductHandler();\r\n    }\r\n  }\r\n\r\n  onAddHandler = () => {\r\n    const { addProductHandler, products } = this.props;\r\n    addProductHandler();\r\n    this.setState({\r\n      activeKey: `${products.length}`\r\n    });\r\n  };\r\n\r\n  onCollapseHandler = id => {\r\n    if (id === undefined) {\r\n      this.setState({ activeKey: null });\r\n    } else {\r\n      this.setState({ activeKey: id });\r\n    }\r\n  };\r\n\r\n  onRemoveHandler = id => {\r\n    const { removeProductHandler } = this.props;\r\n    removeProductHandler(id);     \r\n  };\r\n\r\n  onCancelHandler = () => {\r\n    const { cancel, resetListHandler } = this.props;\r\n    resetListHandler();\r\n    cancel();\r\n  };\r\n\r\n  onFinishHandler = () => {\r\n    const { title, products, finish, resetListHandler } = this.props;\r\n    saveNewList(title, products);\r\n    resetListHandler();\r\n    message.success(createNewListTxt.success(title));\r\n    finish();\r\n  };\r\n\r\n  onShowCancelModalHandler = () => {\r\n    const { showCancelModal } = this.state;\r\n    this.setState({ showCancelModal: !showCancelModal });\r\n  };\r\n\r\n  onShowFinishModalHandler = () => {\r\n    const { showFinishModal } = this.state;\r\n    this.setState({ showFinishModal: !showFinishModal });\r\n  };\r\n\r\n  render() {\r\n    const { activeKey, showCancelModal, showFinishModal } = this.state;\r\n    const { products, title, prev } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <h1>{title}</h1>\r\n        <Collapse\r\n          className='product-panel'\r\n          accordion\r\n          activeKey={activeKey}\r\n          onChange={this.onCollapseHandler}\r\n        >\r\n          {products.map((prod, i) => (\r\n            <Panel\r\n              key={`${i}`}\r\n              header={products[i] === undefined || products[i].name === ''\r\n                ? createNewListTxt.newProduct.title\r\n                : products[i].name}\r\n            >\r\n              <ProductPanel\r\n                id={i}\r\n                key={i}\r\n                onAdd={this.onAddHandler}\r\n                onRemove={() => this.onRemoveHandler(i)}\r\n                product={prod}\r\n              />\r\n            </Panel>\r\n          ))}\r\n        </Collapse>\r\n        <ButtonWrapper>\r\n          <Button onClick={prev}>\r\n            {commons.back}\r\n          </Button>\r\n          <Button type='danger' onClick={this.onShowCancelModalHandler}>\r\n            {commons.cancel}\r\n          </Button>\r\n          <Button type='primary' onClick={this.onShowFinishModalHandler}>\r\n            {commons.finish}\r\n          </Button>\r\n        </ButtonWrapper>\r\n        {showCancelModal && (\r\n          <SLModal\r\n            title={createNewListTxt.cancelModalTitle(title)}\r\n            onCancel={this.onShowCancelModalHandler}\r\n            onContinue={this.onCancelHandler}\r\n          >\r\n            {createNewListTxt.cancelList}\r\n          </SLModal>\r\n        )}\r\n        {showFinishModal && (\r\n          <SLModal\r\n            title={createNewListTxt.finishModalTitle}\r\n            onCancel={this.onShowFinishModalHandler}\r\n            onContinue={this.onFinishHandler}\r\n          >\r\n            {createNewListTxt.finishList}\r\n          </SLModal>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNewList.propTypes = {\r\n  addProductHandler: PropTypes.func,\r\n  products: PropTypes.arrayOf(productModel),\r\n  removeProductHandler: PropTypes.func,\r\n  title: PropTypes.string,\r\n  prev: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  resetListHandler: PropTypes.func,\r\n  finish: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ newListReducer: { products, title } }) => ({\r\n  products,\r\n  title\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addProductHandler: () => addProduct(dispatch),\r\n  removeProductHandler: id => removeProduct(id, dispatch),\r\n  resetListHandler: () => resetList(dispatch)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/** antd  */\r\nimport { List, Button } from 'antd';\r\n\r\n/** Literals */\r\nimport { showListsTable } from '../../utils/literals';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nconst { Item } = List;\r\nconst { Meta } = Item;\r\n\r\nconst ListsTableItem = ({ title, count, onDelete, onShow, onEdit }) => (\r\n  <Item className='item'>\r\n    <Meta\r\n      title={title}\r\n      description={`${showListsTable.products}${count}`}\r\n    />\r\n    <Button\r\n      type='primary'\r\n      icon='eye'\r\n      shape='circle-outline'\r\n      onClick={() => onShow(title)}\r\n    />\r\n    <Button\r\n      icon='edit'\r\n      shape='circle-outline'\r\n      onClick={() => onEdit(title)}\r\n    />\r\n    <Button\r\n      icon='delete'\r\n      shape='circle-outline'\r\n      onClick={() => onDelete(title)}\r\n    />\r\n  </Item>\r\n);\r\n\r\nListsTableItem.propTypes = {\r\n  title: PropTypes.string,\r\n  count: PropTypes.number,\r\n  onDelete: PropTypes.func,\r\n  onShow: PropTypes.func,\r\n  onEdit: PropTypes.func\r\n};\r\n\r\nexport default ListsTableItem;\r\n","import React from 'react';\r\n\r\n/** Models */\r\nimport { childrenModel } from '../../utils/models';\r\n\r\n/** Literals */\r\nimport { showListsTable } from '../../utils/literals';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nconst ListsTableWrapper = ({ children }) => (\r\n  <div className='lists-table-wrapper'>\r\n    <h1>{showListsTable.title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nListsTableWrapper.propTypes = {\r\n  children: childrenModel.isRequired\r\n};\r\n\r\nexport default ListsTableWrapper;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/** antd  */\r\nimport { List, Button } from 'antd';\r\n\r\n/** Components */\r\nimport ButtonWrapper from '../button-wrapper';\r\nimport ListsTableItem from '../lists-table-item';\r\nimport ListsTableWrapper from '../lists-table-wrapper';\r\nimport SLModal from '../modal';\r\n\r\n/** Actions */\r\nimport { getLists, removeList } from '../../utils/localStorage';\r\nimport { setList } from '../../store/show-list/actions';\r\nimport {\r\n  saveTitle,\r\n  setList as setEditList\r\n} from '../../store/new-list/actions';\r\n\r\n/** Literals */\r\nimport { commons, homeTxt, showListsTable } from '../../utils/literals';\r\nimport { historyModel } from '../../utils/models';\r\n\r\n/** Paths */\r\nimport paths from '../../utils/paths';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nclass ListsTable extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      lists: {},\r\n      showModal: false,\r\n      nextId: null\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({\r\n      lists: getLists()\r\n    });\r\n  }\r\n\r\n  onCreateHandle = () => {\r\n    const { history } = this.props;\r\n    history.push(paths.newList);\r\n  }\r\n\r\n  onDeleteHandler = id => {\r\n    const lists = removeList(id);\r\n    this.setState({ lists });\r\n  };\r\n\r\n  onShowListHandler = id => {\r\n    // If there is any list stored in the reducer, a modal for showing\r\n    // the new one is shown\r\n    const { currentList, next } = this.props;\r\n    if (currentList !== null && id !== currentList) {\r\n      this.onToggleModal(id);\r\n    } else if (currentList === null) {\r\n        this.onStoreAndShowListHandler(id);\r\n    } else {\r\n      next();      \r\n    }\r\n  }\r\n\r\n  onStoreAndShowListHandler = id => {\r\n    const { setListHandler, next } = this.props;\r\n    const { lists } = this.state;\r\n    setListHandler(id, lists[id].map(\r\n      prod => ({\r\n        ...prod,\r\n        caught: false\r\n      })\r\n    ));\r\n    next();\r\n  };\r\n\r\n  onToggleModal = nextId => {\r\n    const { showModal } = this.state;\r\n    this.setState({ showModal: !showModal, nextId });\r\n  };\r\n\r\n  onEditListHandler = id => {\r\n    const { saveTitleHandler, setEditListHandler, edit } = this.props;\r\n    const { lists } = this.state;\r\n    saveTitleHandler(id);\r\n    setEditListHandler(lists[id]);\r\n    edit();\r\n  };\r\n\r\n  render() {\r\n    const { prev } = this.props;\r\n    const { lists, showModal, nextId } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <ListsTableWrapper>\r\n          {Object.keys(lists).length === 0\r\n            ? <List />\r\n            : (\r\n              <List\r\n                className='lists-table'\r\n                bordered\r\n                dataSource={\r\n                  Object.keys(lists).map(title => ({\r\n                    title,\r\n                    count: lists[title].length\r\n                  }))\r\n                }\r\n                renderItem={item => (\r\n                  <ListsTableItem\r\n                    title={item.title}\r\n                    count={item.count}\r\n                    onDelete={this.onDeleteHandler}\r\n                    onShow={this.onShowListHandler}\r\n                    onEdit={this.onEditListHandler}\r\n                  />\r\n                )}\r\n              />\r\n            )\r\n          }\r\n          <ButtonWrapper>\r\n            <Button onClick={prev}>\r\n              {commons.back}\r\n            </Button>\r\n            <Button type='primary' onClick={this.onCreateHandle}>\r\n              {homeTxt.newListButton}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </ListsTableWrapper>\r\n        {showModal && (\r\n          <SLModal\r\n            title={showListsTable.modal.title}\r\n            onCancel={this.onToggleModal}\r\n            onContinue={() => this.onStoreAndShowListHandler(nextId)}\r\n          >\r\n            {showListsTable.modal.desc(nextId)}\r\n          </SLModal>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nListsTable.propTypes = {\r\n  prev: PropTypes.func,\r\n  next: PropTypes.func,\r\n  edit: PropTypes.func,\r\n  history: historyModel,\r\n  currentList: PropTypes.string,\r\n  setListHandler: PropTypes.func,\r\n  saveTitleHandler: PropTypes.func,\r\n  setEditListHandler: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ showListReducer: { title } }) => ({\r\n  currentList: title\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setListHandler: (id, list) => setList(dispatch, id, list),\r\n  saveTitleHandler: title => saveTitle(title, dispatch),\r\n  setEditListHandler: products => setEditList(dispatch, products)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListsTable);\r\n","import * as TYPES from './actionTypes';\r\n\r\nexport const setList = (dispatch, id, list) =>\r\n  dispatch({\r\n    type: TYPES.SET_LIST,\r\n    id,\r\n    list\r\n  });\r\n\r\nexport const checkProduct = (dispatch, id) =>\r\n  dispatch({\r\n    type: TYPES.CHECK_PRODUCT,\r\n    id\r\n  });\r\n\r\nexport const resetList = dispatch =>\r\n  dispatch({\r\n    type: TYPES.RESET_LIST\r\n  });\r\n","export const SET_LIST = 'SET_LIST';\r\nexport const CHECK_PRODUCT = 'CHECK_PRODUCT';\r\nexport const RESET_LIST = 'RESET_LIST';\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/** antd  */\r\nimport { Table, Checkbox, Button } from 'antd';\r\n\r\n/** Components */\r\nimport ButtonWrapper from '../button-wrapper';\r\n\r\n/** Actions */\r\nimport { checkProduct, resetList } from '../../store/show-list/actions';\r\n\r\n/** Literals */\r\nimport { commons } from '../../utils/literals';\r\n\r\n/** CSS */\r\nimport './index.css';\r\n\r\nconst columns = [{\r\n  title: 'Producto',\r\n  dataIndex: 'name',\r\n  key: 'name',\r\n  render: text => <h2>{text}</h2> // eslint-disable-line\r\n}, {\r\n  title: 'Cantidad',\r\n  dataIndex: 'amount',\r\n  key: 'amount'\r\n}, {\r\n  title: 'Cogido',\r\n  dataIndex: 'caught',\r\n  key: 'cuaght',\r\n  render: ({ checked, checkHandler }) => // eslint-disable-line\r\n    <Checkbox\r\n      defaultChecked={checked}\r\n      value={checked}\r\n      onChange={checkHandler}\r\n    /> // eslint-disable-line\r\n}];\r\n\r\nconst List = ({ title, data, prev }) => (\r\n  <Fragment>\r\n    <h1>{title}</h1>\r\n    <Table bordered pagination={false} columns={columns} dataSource={data} />\r\n    <ButtonWrapper>\r\n      <Button onClick={prev}>\r\n        {commons.back}\r\n      </Button>\r\n      {/* TODO: reset */}\r\n      {/* <Button onClick={resetListHandler} type='primary'>\r\n        {showListsTable.reset}\r\n      </Button> */}\r\n    </ButtonWrapper>\r\n  </Fragment>\r\n);\r\n\r\nList.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      key: PropTypes.string,\r\n      name: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      caught: PropTypes.bool\r\n    })\r\n  ),\r\n  prev: PropTypes.func,\r\n  title: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = ({ showListReducer: { title, list } }) => ({\r\n  title,\r\n  list\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  checkProductHandler: id => checkProduct(dispatch, id),\r\n  resetListHandler: () => resetList(dispatch)\r\n});\r\n\r\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => ({\r\n  ...propsFromState,\r\n  ...propsFromDispatch,\r\n  ...ownProps,\r\n  data: propsFromState.list.map((prod, i) => ({\r\n    key: `${prod.name}-${i}`,\r\n    name: prod.name,\r\n    amount: `${prod.amount} ${prod.uds === 0\r\n      ? 'kgs.'\r\n      : 'uds.'}`,\r\n    caught: {\r\n      checked: prod.caught,\r\n      checkHandler: () => propsFromDispatch.checkProductHandler(i)\r\n    }\r\n  }))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps\r\n)(List);\r\n","import NewTitle from '../components/new-title';\r\nimport NewList from '../components/new-list';\r\nimport ListsTable from '../components/lists-table';\r\nimport List from '../components/list';\r\n\r\nexport const createNewListStates = [\r\n  {\r\n    // 0\r\n    component: NewTitle,\r\n    inputs: {\r\n      cancel: -1,\r\n      next: 1\r\n    }\r\n  },\r\n  {\r\n    // 1\r\n    component: NewList,\r\n    inputs: {\r\n      cancel: -1,\r\n      prev: 0,\r\n      finish: -1\r\n    }\r\n  }\r\n];\r\n\r\nexport const showListStates = [\r\n  {\r\n    // 0\r\n    component: ListsTable,\r\n    inputs: {\r\n      prev: -1,\r\n      next: 1,\r\n      edit: 2\r\n    }\r\n  },\r\n  {\r\n    // 1\r\n    component: List,\r\n    inputs: {\r\n      prev: 0\r\n    }\r\n  },\r\n  {\r\n    // 2\r\n    component: NewTitle,\r\n    inputs: {\r\n      cancel: -1,\r\n      next: 3\r\n    }\r\n  },\r\n  {\r\n    // 3\r\n    component: NewList,\r\n    inputs: {\r\n      cancel: -1,\r\n      prev: 2,\r\n      finish: -1\r\n    }\r\n  }\r\n];\r\n","import * as TYPES from './actionTypes';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  products: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let newProducts;\r\n  switch(action.type) {\r\n      case TYPES.SET_LIST:\r\n        return {\r\n          ...state,\r\n          products: action.products\r\n        };\r\n      case TYPES.RESET:\r\n        return {\r\n          ...initialState\r\n        };\r\n      case TYPES.UPDATE_FIELD:\r\n      newProducts = [...state.products];\r\n      newProducts[action.id][action.field] = action.value;\r\n      return {\r\n        ...state,\r\n        products: newProducts\r\n      };\r\n    case TYPES.REMOVE_PRODUCT:\r\n      newProducts = [...state.products];\r\n      newProducts.splice(action.id, 1);\r\n      return {\r\n        ...state,\r\n        products: newProducts\r\n      };\r\n    case TYPES.SAVE_TITLE:\r\n      return {\r\n        ...state,\r\n        title: action.title\r\n      };\r\n    case TYPES.ADD_PRODUCT:\r\n      newProducts = [...state.products];\r\n      newProducts.push({\r\n        name: '',\r\n        amount: 1,\r\n        uds: 0\r\n      });\r\n      return {\r\n        ...state,\r\n        products: newProducts\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as TYPES from './actionTypes';\r\n\r\n/**\r\n * list element will have the next template:\r\n * {\r\n *  name: String,\r\n *  amount: Number,\r\n *  uds: Number,\r\n *  caught: Bool\r\n * }\r\n * where:\r\n * name -> Name of the prduct\r\n * amount -> Amount of the product\r\n * uds -> kgs. or uds.\r\n * caugth -> If the product has been caught yet or not\r\n */\r\nconst initialState = {\r\n  title: null,\r\n  list: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let newList = [];\r\n  switch(action.type) {\r\n    case TYPES.RESET_LIST:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(prod => ({\r\n          ...prod,\r\n          caught: false\r\n        }))\r\n      };\r\n    case TYPES.CHECK_PRODUCT:\r\n      newList = [...state.list];\r\n      newList[action.id] = {...state.list[action.id]};\r\n      newList[action.id].caught = !newList[action.id].caught;\r\n      return {\r\n        ...state,\r\n        list: newList\r\n      };\r\n    case TYPES.SET_LIST:\r\n      return {\r\n        ...state,\r\n        title: action.id,\r\n        list: action.list\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport thunk from 'redux-thunk';\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst middlewares = [thunk, routerMiddleware(createHistory())];\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nconst config = globalReducer => createStore(globalReducer, enhancer);\r\n\r\nexport default config;\r\n","import { combineReducers } from 'redux';\r\nimport { routerReducer as router } from 'react-router-redux';\r\nimport newListReducer from './new-list';\r\nimport showListReducer from './show-list';\r\nimport config from './config';\r\n\r\nconst rootReducer = combineReducers({\r\n  router,\r\n  newListReducer,\r\n  showListReducer\r\n});\r\n\r\nexport default config(rootReducer);\r\n","import React from 'react';\r\n\r\n/** Redux */\r\nimport { Provider } from 'react-redux';\r\n\r\n/** antd */\r\nimport { Layout } from 'antd';\r\n\r\n/** Router */\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n/** Components */\r\nimport Home from './components/home';\r\nimport GitHubCorner from './components/GitHub-corner';\r\nimport AppLayout from './components/app-layout';\r\nimport FlowStateMachine from './utils/flowStateMachine';\r\n\r\n/** Paths */\r\nimport paths from './utils/paths';\r\n\r\n/** States */\r\nimport { createNewListStates, showListStates } from './utils/flowStates';\r\n\r\nimport store from './store';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Layout>\r\n      <GitHubCorner />\r\n      <Content className='content'>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={paths.home}\r\n              render={props => (\r\n                <Home {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={paths.newList}\r\n              render={props => (\r\n                <AppLayout>\r\n                  <FlowStateMachine\r\n                    {...props}\r\n                    stateList={createNewListStates}\r\n                    allowRecursivity\r\n                  />\r\n                </AppLayout>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={paths.showLists}\r\n              render={props => (\r\n                <AppLayout>\r\n                  <FlowStateMachine\r\n                    {...props}\r\n                    stateList={showListStates}\r\n                    allowRecursivity\r\n                  />\r\n                </AppLayout>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </Content>\r\n    </Layout>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}